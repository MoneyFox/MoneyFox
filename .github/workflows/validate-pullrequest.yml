name: validate pr

on:
  merge_group:
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

env:
  DOTNET_VERSION: "8.0.x"
  UI_PROJECT_PATH: "src/MoneyFox.Ui/MoneyFox.Ui.csproj"
  CORE_TEST_PROJECT_PATH: "src/MoneyFox.Core.Tests/MoneyFox.Core.Tests.csproj"
  UI_TEST_PROJECT_PATH: "src/MoneyFox.Ui.Tests/MoneyFox.Ui.Tests.csproj"
  INFRASTRUCTURE_PROJECT_PATH: "src/MoneyFox.Infrastructure.Tests/MoneyFox.Infrastructure.Tests.csproj"

jobs:
  buildWin:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install MAUI Workload
        run: |
          dotnet workload install maui-windows
          dotnet workload install maui-mobile

      - name: Restore Dependencies
        run: dotnet restore ${{env.UI_PROJECT_PATH}}

      - name: Test
        run: |
          dotnet test ${{env.UI_TEST_PROJECT_PATH}}
          dotnet test ${{env.CORE_TEST_PROJECT_PATH}}
          dotnet test ${{env.INFRASTRUCTURE_PROJECT_PATH}}

      - name: Build MAUI Win
        run: dotnet publish ${{env.UI_PROJECT_PATH}} -f net8.0-windows10.0.22621.0 -c Release /p:AppxPackageSigningEnabled=false
  
  
  buildAndroid:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install MAUI Workload
        run: dotnet workload install maui-mobile

      - name: Restore Dependencies
        run: dotnet restore ${{env.UI_PROJECT_PATH}}

      - name: Test
        run: |
          dotnet test ${{env.UI_TEST_PROJECT_PATH}}
          dotnet test ${{env.CORE_TEST_PROJECT_PATH}}
          dotnet test ${{env.INFRASTRUCTURE_PROJECT_PATH}}

      - name: Build MAUI Android
        run: dotnet publish ${{env.UI_PROJECT_PATH}} -f net8.0-android -c Release /p:EnableLLVM=false
  
  
  buildiOS:

    runs-on: macos-13

    steps:
      - name: Install the Apple certificate and provisioning profile
        if: ${{ false }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Xcode Select Version
        uses: mobiledevops/xcode-select-version-action@v1
        with:
          xcode-select-version: 15.0.1

      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install MAUI Workloads
        run: dotnet workload install maui-mobile

      - name: Restore Dependencies
        run: dotnet restore ${{env.UI_PROJECT_PATH}}

      - name: Test
        run: |
          dotnet test ${{env.UI_TEST_PROJECT_PATH}}
          dotnet test ${{env.CORE_TEST_PROJECT_PATH}}
          dotnet test ${{env.INFRASTRUCTURE_PROJECT_PATH}}

      - name: Build MAUI iOS
        if: ${{ false }}
        run: dotnet build ${{env.UI_PROJECT_PATH}} -f net8.0-ios -c Release /p:packageApp=True
      
