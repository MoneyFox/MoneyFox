name: build and deploy

on:

  workflow_dispatch:

env:
    DOTNETVERSION: 6.0.400
    ANDROID_PROJECT_PATH: "src/MoneyFox.Android/MoneyFox.Android.csproj"
    IOS_PROJECT_PATH: "src/MoneyFox.Ios/MoneyFox.Ios.csproj"
    TEST_PROJECT_PATH: "src/MoneyFox.Tests/MoneyFox.Tests.csproj"
    MAJOR_MINOR_VERSION: "7.8"

jobs:
  buildAndroid:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Get current time
      uses: josStorer/get-current-time@v2.0.1
      id: current-time
      with:
        format: YYYYMMDD

    - name: Update AndroidManifest.xml
      uses: damienaicheh/update-android-version-manifest-action@v1.0.0
      with:
        android-manifest-path: "src/MoneyFox.Android/Properties/AndroidManifest.xml"
        version-code: "${{ steps.current-time.outputs.formattedTime }}${{ github.run_number }}"
        version-name: "${{ env.MAJOR_MINOR_VERSION }}.${{ github.run_number }}"
        print-file: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '${{env.DOTNETVERSION}}'

    - name: Install MAUI Workload
      run: dotnet workload install maui --ignore-failed-sources

    - name: Restore Dependencies
      run: dotnet restore ${{env.ANDROID_PROJECT_PATH}}

    - name: Build MAUI Android
      run: dotnet publish ${{env.ANDROID_PROJECT_PATH}} -c Release -f net6.0-android --no-restore -o "src/MoneyFox.Android/build"

    - uses: r0adkll/sign-android-release@v1
      name: Sign app ABB
      # ID used to access action output
      id: sign_app
      with:
        releaseDirectory: "src/MoneyFox.Android/build"
        signingKeyBase64: ${{ secrets.RELEASE_KEYSTORE }}
        alias: ${{ secrets.KEYSTORE_ALIAS }}
        keyStorePassword: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.KEYSTORE_PASSWORD }}

    - name: Test
      run: dotnet test ${{env.TEST_PROJECT_PATH}}

    - uses: actions/upload-artifact@v3
      with:
        name: Signed app bundle
        path: ${{steps.sign_app.outputs.signedReleaseFile}}
        

  buildiOS:

    runs-on: macos-12

    steps:
    - uses: actions/checkout@v3
        
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
 
        
    - name: Update Info.plist
      uses: damienaicheh/update-ios-version-info-plist-action@v1.1.0
      with:
        info-plist-path: "Src/MoneyFox.Ios/Info.plist"
        bundle-short-version-string: "${{ env.MAJOR_MINOR_VERSION }}.${{ github.run_number }}"
        bundle-version: ${{ github.run_number }}"
        print-file: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '${{env.DOTNETVERSION}}'

    - name: Install MAUI Workload
      run: dotnet workload install maui --ignore-failed-sources

    - name: Restore Dependencies
      run: dotnet restore ${{env.IOS_PROJECT_PATH}}

    - name: Build MAUI iOS
      run: dotnet publish ${{env.IOS_PROJECT_PATH}} -c Release -f net6.0-ios /p:ArchiveOnBuild=True

    - name: Test
      run: dotnet test ${{env.TEST_PROJECT_PATH}}
      
    - name: Upload iOS Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: moneyfox-ios-build
        path: src/MoneyFox.Ios/bin/Release/**/*.app
        
