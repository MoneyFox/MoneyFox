trigger:
  batch: true
  branches:
    include:
      - master

pr: none

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  Major: '7'
  Minor: '7'

jobs:
  - job: BuildWindows
    displayName: 'Build Windows Release'
    
    steps:

      - task: DownloadSecureFile@1.200.0
        displayName: 'Download secure file'
        name: 'signingCert'
        inputs:
          secureFile: 'MoneyFoxCert_2021.pfx'

      - powershell: |
          $pfxpath = '$(signingCert.secureFilePath)'
          $certPassword = $env:CERT_PASSWORD_ENV
          
          Add-Type -AssemblyName System.Security
          $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
          $cert.Import($pfxpath, $certPassword, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]"PersistKeySet")
          $store = new-object system.security.cryptography.X509Certificates.X509Store -argumentlist "MY", CurrentUser
          $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]"ReadWrite")
          $store.Add($cert)
          $store.Close()
        displayName: 'Install Cert'
        env:
          CERT_PASSWORD_ENV: $(UWP_Certificate_Password)

      - task: PowerShell@2.200.0
        displayName: "Set AppManifest"
        inputs:
          targetType: 'inline'
          script: |
            [xml]$xmlDoc = Get-Content '$(Build.SourcesDirectory)\src\MoneyFox.Win\MoneyFox.Win (Package)\Package.appxmanifest'
            $xmlDoc.Package.Identity.Name="57598ApplySolutionsSoftwa.MoneyFox"
            $xmlDoc.Package.Identity.Publisher="CN=071307B1-B0E3-434A-AD0E-FFF714A7245C"
            $xmlDoc.Save('$(Build.SourcesDirectory)\src\MoneyFox.Win\MoneyFox.Win (Package)\Package.appxmanifest')
          failOnStderr: true

      - task: PowerShell@2.200.0
        displayName: "Set Store Association"
        inputs:
          targetType: 'inline'
          script: |
            [xml]$xmlDoc = Get-Content '$(Build.SourcesDirectory)\src\MoneyFox.Win\MoneyFox.Win (Package)\Package.StoreAssociation.xml'
            $xmlDoc.StoreAssociation.Publisher="CN=071307B1-B0E3-434A-AD0E-FFF714A7245C"
            $xmlDoc.StoreAssociation.ProductReservedInfo.MainPackageIdentityName="57598ApplySolutionsSoftwa.MoneyFox"
            $xmlDoc.Save('$(Build.SourcesDirectory)\src\MoneyFox.Win\MoneyFox.Win (Package)\Package.StoreAssociation.xml')
          failOnStderr: true

      - task: VersionAPPX@2
        inputs:
          Path: '$(Build.SourcesDirectory)'
          VersionNumber: '$(Major).$(Minor).$(Build.BuildId)'
          InjectVersion: false
          VersionRegex: '\d+.\d+.\d+'
          OutputVersion: 'OutputedVersion'

      - task: NuGetToolInstaller@1.208.1
        displayName: 'Use NuGet'
        inputs:
          versionSpec: 6.x

      - task: NuGetCommand@2.208.1
        displayName: 'NuGet restore'
        inputs:
          restoreSolution: '**/MoneyFox.WinUI.sln'

      - task: DotNetCoreCLI@2.208.1
        displayName: 'Run Tests'
        inputs:
          command: test
          projects: '**/*.Tests.csproj'
          arguments: '--configuration $(BuildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'

      - task: CopyFiles@2.208.0
        displayName: 'Copy coveragexml to staging'
        inputs:
          SourceFolder: '$(Agent.TempDirectory)'
          Contents: '**\*.opencover.xml'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: VSBuild@1.208.0
        displayName: 'Build Windows Project'
        inputs:
          solution: '**/*.wapproj'
          msbuildArgs: '
        /p:AppxBundlePlatforms="$(buildPlatform)"
        /p:AppxPackageDir="$(appxPackageDir)"
        /p:AppxBundle=Always
        /p:UapAppxPackageBuildMode=CI
        /p:AppxPackageSigningEnabled=true
        /p:PackageCertificateThumbprint=""
        /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"
        /p:PackageCertificatePassword="$(UWP_Certificate_Password)"'
          platform: x64
          configuration: '$(BuildConfiguration)'

      - task: PublishBuildArtifacts@1.200.0
        displayName: 'Publish Artifact: drop'
