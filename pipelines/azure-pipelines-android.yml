trigger:
  batch: true
  branches:
    include:
      - master

pr: none

pool:
  vmImage: 'windows-2022'

variables:
  BuildConfiguration: 'Release'
  Major: '8'
  Minor: '3'

name: $(date:yyyy)$(DayOfYear)$(rev:rrr)
steps:
  - task: UseDotNet@2
    displayName: 'Install .net sdk'
    inputs:
      version: 8.x

  - task: PowerShell@2
    displayName: "Set App Version"
    enabled: false
    inputs:
      targetType: 'inline'
      script: |
        $Version = $(Build.BuildNumber)
        $DisplayVersion = "$(Major).$(Minor).$(Build.BuildId)"
        Write-Host "DisplayVersion:" $DisplayVersion
        Write-Host "Version:" $Version
        [xml]$xml = Get-Content -Path ./src/MoneyFox.Ui/MoneyFox.Ui.csproj
        $xml.Project.PropertyGroup[3].ApplicationDisplayVersion = $DisplayVersion
        $xml.Project.PropertyGroup[3].ApplicationVersion = $Version
        Set-Content "./src/MoneyFox.Ui/MoneyFox.Ui.csproj" -Value $xml.InnerXml -Force
        Write-Host $xml.InnerXml
      pwsh: true

  - task: android-manifest-version@1
    displayName: "Set App Version"
    inputs:
      sourcePath: 'Src/MoneyFox.Ui/Platforms/Android/AndroidManifest.xml'
      versionCodeOption: 'buildid'
      versionCode: '$(Build.BuildNumber)'
      versionCodeOffset: '0'
      versionName: '$(Major).$(Minor).$(Build.BuildId)'
      printFile: true

  - task: DownloadSecureFile@1
    name: keystore
    inputs:
      secureFile: 'Money Fox.keystore'

  - task: JavaToolInstaller@0
    displayName: 'Install Java 11'
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: colinsalmcorner.colinsalmcorner-buildtasks.replace-tokens-task.ReplaceTokens@1
    displayName: 'Settings'
    inputs:
      sourcePath: Src/MoneyFox.Ui
      filePattern: appsettings.json

  - task: PowerShell@2
    displayName: 'Install maui workload'
    inputs:
      targetType: 'inline'
      script: 'dotnet workload install maui --ignore-failed-sources'

  - task: DotNetCoreCLI@2
    displayName: 'Run Tests'
    inputs:
      command: 'test'
      projects: '**/*.Tests.csproj'
      arguments: '--configuration $(BuildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'build Android app'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '**/MoneyFox.Ui.csproj'
      arguments: '-c Release -f net8.0-android /p:AndroidKeyStore="True" /p:AndroidSigningKeyAlias="$(KeyStoreAlias)" /p:AndroidSigningKeyStore="$(keystore.secureFilePath)" /p:AndroidSigningKeyPass="$(KeyStorePass)" /p:AndroidSigningStorePass="$(KeyStorePass)"'

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: '**/*-Signed.aab'
      TargetFolder: '$(build.artifactstagingdirectory)'
      flattenFolders: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
