trigger:
  batch: true
  branches:
    include:
      - master

pr: none

pool:
  vmImage: 'macOS-12'

variables:
  Major: '8'
  Minor: '2'

steps:

  - task: UseDotNet@2
    displayName: 'Install .net sdk'
    inputs:
      version: 7.0.201

  - task: PowerShell@2
    displayName: "Set App Version"
    enabled: false
    inputs:
      targetType: 'inline'
      script: |
        $DisplayVersion = "$(Major).$(Minor).$(Build.BuildId)"
        $Version = $(Build.BuildNumber)

        Write-Host "DisplayVersion:" $DisplayVersion
        Write-Host "Version:" $Version

        [xml]$xml = Get-Content -Path ./src/MoneyFox.Ui/MoneyFox.Ui.csproj
        $xml.Project.PropertyGroup[0].ApplicationDisplayVersion = $Version 
        $xml.Project.PropertyGroup[0].ApplicationVersion = $DisplayVersion
        Set-Content "./src/MoneyFox.Ui/MoneyFox.Ui.csproj" -Value $xml.InnerXml -Force
        Write-Host $xml.InnerXml
      pwsh: true
    env:
      Major: $(Major)
      Minor: $(Minor)

  - bash: |
      # Write your commands here

      echo "Build Script started.."

      echo 'Updating fastlane...'
      sudo gem install fastlane

      echo $Major
      echo $Minor
      echo $BUILD_BUILDNUMBER

      VERSION=$Major.$Minor.$BUILD_BUILDID
      echo $VERSION

      INFO_PLIST_FILE=$BUILD_REPOSITORY_LOCALPATH/Src/MoneyFox.Ui/Platforms/iOS/Info.plist
      echo $INFO_PLIST_FILE

      echo "Updating version name to $VERSION_NAME in Info.plist"
      plutil -replace CFBundleShortVersionString -string $BUILD_BUILDNUMBER $INFO_PLIST_FILE
      plutil -replace CFBundleVersion -string $VERSION $INFO_PLIST_FILE
    displayName: 'Set App Version'
    env:
      Major: $(Major)
      Minor: $(Minor)

  - task: InstallAppleCertificate@2
    displayName: 'Install an Apple certificate'
    inputs:
      certSecureFile: 'MoneyFox_Distribution_2022.p12'
      certPwd: '$(P12password)'
      keychain: temp

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install an Apple provisioning profile'
    inputs:
      provProfileSecureFile: 'MoneyFox_Distribution_2022.mobileprovision'

  - task: colinsalmcorner.colinsalmcorner-buildtasks.replace-tokens-task.ReplaceTokens@1
    displayName: 'Settings'
    inputs:
      sourcePath: Src/MoneyFox.Ui
      filePattern: appsettings.json

  - task: PowerShell@2
    displayName: "install maui workload"
    inputs:
      targetType: 'inline'
      script: 'dotnet workload install maui'

  - task: DotNetCoreCLI@2
    displayName: 'Run Tests'
    inputs:
      command: 'test'
      projects: |
        **/*.Tests.csproj

  - task: DotNetCoreCLI@2
    displayName: 'Build iOS app'
    inputs:
      command: 'publish'
      publishWebProjects: false
      zipAfterPublish: false
      projects: '**/MoneyFox.Ui.csproj'
      arguments: '-c Release -f net7.0-ios -o $(build.artifactstagingdirectory) /p:BuildIpa=true /p:Codesignkey="$(APPLE_CERTIFICATE_SIGNING_IDENTITY)" /p:CodesignProvision="$(APPLE_PROV_PROFILE_UUID)"'

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $sourceRoot = '$(system.defaultworkingdirectory)/assets/metadata'
        Copy-Item -Path $sourceRoot  -Destination $(build.artifactstagingdirectory) -Recurse

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
