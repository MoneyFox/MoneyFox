trigger:
  batch: true
  branches:
    include:
      - master

pr: none

pool:
  vmImage: 'macOS-12'

variables:
  Major: '7'
  Minor: '7'

steps:
  - task: UseDotNet@2.207.2
    displayName: 'Use correct .Net sdk'
    inputs:
      version: 3.1.x

  #- script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 6_12_0
  #  displayName: 'Select the Xamarin SDK version 6.12.0'

  #- script: echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'/Applications/Xcode_12.1.app;sudo xcode-select --switch /Applications/Xcode_12.app/Contents/Developer
  #  displayName: 'Updating xcode version'

  - bash: |
      # Write your commands here

      echo "Build Script started.."

      echo 'Updating fastlane...'
      sudo gem install fastlane

      echo $Major
      echo $Minor
      echo $BUILD_BUILDNUMBER

      VERSION=$Major.$Minor.$BUILD_BUILDID
      echo $VERSION

      INFO_PLIST_FILE=$BUILD_REPOSITORY_LOCALPATH/Src/MoneyFox.Ios/Info.plist
      echo $INFO_PLIST_FILE

      echo "Updating version name to $VERSION_NAME in Info.plist"
      plutil -replace CFBundleShortVersionString -string $BUILD_BUILDNUMBER $INFO_PLIST_FILE
      plutil -replace CFBundleVersion -string $VERSION $INFO_PLIST_FILE
    displayName: 'Set App Version'
    env:
      Major: $(Major)
      Minor: $(Minor)

  - task: InstallAppleCertificate@2.200.0
    displayName: 'Install an Apple certificate'
    inputs:
      certSecureFile: 'MoneyFox_Distribution_2022.p12'
      certPwd: '$(P12password)'
      keychain: temp

  - task: InstallAppleProvisioningProfile@1.200.0
    displayName: 'Install an Apple provisioning profile'
    inputs:
      provProfileSecureFile: 'MoneyFox_Distribution_2022.mobileprovision'

  - task: NuGetToolInstaller@1.208.1
    displayName: 'Use NuGet'
    inputs:
      versionSpec: 6.x

  - task: NuGetCommand@2.208.1
    displayName: 'NuGet restore'
    inputs:
      restoreSolution: '**/MoneyFox.Mobile.sln'

  - task: DotNetCoreCLI@2.208.1
    displayName: 'Run Tests'
    inputs:
      command: 'test'
      projects: |
        **/*.Tests.csproj

  - task: XamariniOS@2.200.1
    displayName: 'Build Xamarin.iOS '
    inputs:
      solutionFile: Src/MoneyFox.Ios/MoneyFox.iOS.csproj
      configuration: $(BuildConfiguration)
      signingIdentity: $(APPLE_CERTIFICATE_SIGNING_IDENTITY)
      signingProvisioningProfileID: $(APPLE_PROV_PROFILE_UUID)

  - task: CopyFiles@2.208.0
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**/*.ipa'
      TargetFolder: '$(build.artifactstagingdirectory)'
      flattenFolders: true

  - task: PowerShell@2.200.0
    inputs:
      targetType: 'inline'
      script: |
        $sourceRoot = '$(system.defaultworkingdirectory)/assets/metadata'
        Copy-Item -Path $sourceRoot  -Destination $(build.artifactstagingdirectory) -Recurse

  - task: CopyFiles@2.208.0
    enabled: false
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**/release_notes.txt'
      TargetFolder: 'default'
      CleanTargetFolder: true
      OverWrite: true
      flattenFolders: true

  - task: PublishBuildArtifacts@1.200.0
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
