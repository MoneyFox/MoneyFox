<views:Popup
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:resources="clr-namespace:MoneyFox.Ui.Resources.Strings"
    xmlns:views="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:controls="clr-namespace:MoneyFox.Ui.Controls"
    xmlns:converter="clr-namespace:MoneyFox.Ui.Converter"
    xmlns:paymentList="clr-namespace:MoneyFox.Ui.Views.Payments.PaymentList"
    CanBeDismissedByTappingOutsideOfPopup="false"
    Color="{AppThemeBinding Dark={StaticResource CardBackgroundDark}, Light={StaticResource CardBackgroundLight}}"
    Size="330, 500"
    x:Class="MoneyFox.Ui.Views.Payments.PaymentList.FilterPopup"
    x:DataType="paymentList:SelectFilterPopupViewModel">

    <Grid RowDefinitions="*, 40">
        <Grid.Resources>
            <converter:InverseBoolConverter x:Key="InverseBoolConverter" />
        </Grid.Resources>

        <StackLayout Padding="15" Spacing="6">
            <Label Text="{x:Static resources:Translations.SelectFilterTitle}"
                   Style="{DynamicResource TextTitle}" />

            <Grid Margin="0,6,0,0">
                <Label Text="{x:Static resources:Translations.IsClearedLabel}"
                       HorizontalOptions="Start" />
                <Switch IsToggled="{Binding IsClearedFilterActive}"
                        HorizontalOptions="End" />
            </Grid>

            <Grid Margin="0,6,0,0">
                <Label Text="{x:Static resources:Translations.IsRecurringLabel}"
                       HorizontalOptions="Start" />
                <Switch IsToggled="{Binding IsRecurringFilterActive}"
                        HorizontalOptions="End" />
            </Grid>

            <controls:PaymentTypePicker PickerTitle="{x:Static resources:Translations.PaymentTypeLabel}"
                                        PaymentTypeSource="{Binding PaymentTypeFilterList}"
                                        SelectedType="{Binding FilteredPaymentType}" />


            <controls:CustomDatePicker DatePickerTitle="{x:Static resources:Translations.TimeRangeStartLabel}"
                                       DateField="{Binding TimeRangeStart}" />

            <controls:CustomDatePicker DatePickerTitle="{x:Static resources:Translations.TimeRangeEndLabel}"
                                       DateField="{Binding TimeRangeEnd}" />

            <Label IsVisible="{Binding IsDateRangeValid, Mode=OneWay, Converter={StaticResource InverseBoolConverter}}"
                   Text="{x:Static resources:Translations.DateRangeInvalidMessage}" TextColor="OrangeRed" />
        </StackLayout>

        <Button Grid.Row="1"
                Text="{x:Static resources:Translations.DoneLabel}"
                IsEnabled="{Binding IsDateRangeValid, Mode=OneWay}"
                Clicked="Button_OnClicked" />
    </Grid>
</views:Popup>